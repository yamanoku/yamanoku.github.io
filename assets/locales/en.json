{
  "job": {
    "1": "FrontEnd Designer",
    "2": "Accessibility Advocator",
    "3": "UI Designer"
  },
  "info": {
    "caption": "I'm active on the Internet under the name of Oyama-Michinoku, yamanoku. My birthday is October 30, 1989. I was born in Noshiro City, Akita Prefecture. I'm male. Currently, I lives in Nagareyama City, Chiba Prefecture. One daughter's father and three cat owners."
  },
  "career": {
    "experiencedSkills": "Experienced skills",
    "wantedly": "Wantedly",
    "lapras": "LAPRAS",
    "youtrust": "YOUTRUST",
    "curriculumVitae": "Curriculum Vitae",
    "desc01": "I started my career as a Web designer, not as an engineer.",
    "desc02": "I changed my job as an engineer to concentrate on programming because I thought that I could not understand the basics of what I could and could not do on the browser and could not make expressions and feature proposals that would be pleasing to users, rather than the influence of my previous career when I was in charge of all direction-design programming.",
    "desc03": "I began my career as a markup engineer, taking basic coding and gradually moving into the frontend engineer space, including jQuery, Ajax communication, task runners, CSS design, and the use of frameworks.",
    "desc04": "When I aim to become an engineer, there are some things that I want to achieve that I create “A product that has been used for a long time with a strong design”. We believe that we can achieve this not only through engineering, but also through UI design, user experience, and consideration for wider use. It's a difficult task, but I want to do it one by one so that everyone can enjoy better things."
  },
  "product": {
    "wafb": {
      "title": "Web Accessibility for Beginners.",
      "circleDetail": "Circle details | Scarlet dog",
      "boothLink": "Sales page on Booth",
      "noteLink": "Sales page on note"
    },
    "reading": "Reading...",
    "vuePortfolio": "Vue Portfolio Template",
    "vueA11yPage2019": {
      "title": "About accessibility with Vue.js 2019",
      "link": "Article about accessibility with Vue.js 2019",
      "info": {
        "listitem01": "Published.",
        "listitem02" : "Posted on {awesomeA11yVue}",
        "listitem03" : "Added english page"
      }
    },
    "designFigma": "Product Design - Figma",
    "updateInfo": "Update Information",
    "description": {
      "wafb": "Presented in the 5th technical book fest. I would like to ask not only engineers but also all people involved with the web to see what kind of measures are available for web accessibility, such as machine-readable web pages, human-readable web pages, and WAI-ARIA web pages.",
      "reading": "I came up with the idea of accumulating and visualizing information about what would happen if I collected and summarized the news that I always watch. It incorporates PWA technology so that it can also be viewed as an offline application.",
      "vuePortfolio": "Portfolio template made by Vue.js. This is the first SPA created from vue cli. I used the Vue 1.0 versions at first, but now I can upgrade it to the Vue 3.0 versions.",
      "vueA11yPage2019": "Created with the motivation to make people aware of accessibility in Vue.js development. Initially, it was put together as a presentation for a conference and later as an advent calendar article, but we are updating it on time to make it a more practical reference and functional document."
    }
  },
  "sns": {
    "tumblr": {
      "tumblr": "Tumblr",
      "tumblog": "Blog",
      "artworks": "art works"
    },
    "twitter": "Twitter",
    "facebook": "Facebook",
    "github": "Github"
  },
  "donate": {
    "desc01": "If you are interested in my work, presentations and activities, you can donate me by."
  },
  "home": {
    "title": "Home"
  },
  "aboutPage": {
    "title": "About Site",
    "description": "yamanoku.net is a portal site of Okuto Oyama called yamanoku.",
    "heading": {
      "toc": "Table of Contents",
      "implementation": "Explaining site implementation",
      "design": "Explaining site design"
    },
    "subHeading": {
      "markup": "Markup",
      "components": "Component oriented design",
      "pwa": "PWA (Progressive Web Application)",
      "i18n": "Internationalization",
      "overdesign": "Don't overdesign.",
      "fontSize": "Font size",
      "contrast": "Color contrast",
      "maxWidth": "About the greatest amount of content",
      "verticalRhythm": "Vertical rhythm"
    },
    "markup": {
      "desc01": "Semantic markup implementation to realize information design of human-readable (Human can understand) and machine-readable (Be understood by the machine).",
      "desc02": "It also implements content completion using WAI-ARIA (Web Accessibility Initiative - Accessible Rich Internet Applications).",
      "caption": "Assist users as they move from article to article by tying aria-labelledby to article elements."
    },
    "components": {
      "desc01": "You need to format the API you get for display, but managing it as a single component simplifies source code, allows multiple uses, and simplifies information design.",
      "desc02": "For example, the slide list uses the following components to render:"
    },
    "pwa": {
      "desc01": "When browsing in Google Chrome, you can use desktop PWA from your PC or PWA from your mobile device.",
      "desc02": "You can launch it as a native app without going through a browser, use the cache to get a fast page experience, or download it once and view it offline."
    },
    "i18n": {
      "desc01": "Since we are developing on Nuxt.js, we have introduced a tool called nuxt-18n. In addition to internationalization, rendering can also be done for specific languages.",
      "desc02": "The following is a conditional expression that is displayed when it is not in Japanese."
    },
    "designDescription": "Inclusive design designed for easy viewing by all users.",
    "overdesign": {
      "desc01": "Too much decoration can prevent you from getting the information you want. It is designed with the default style of the browser, that is, the standard image in mind.",
      "desc02": "It's also the semantic markup of the design makes it possible to arrive at the information without feeling out of place, even with the default style in browser."
    },
    "fontSize": {
      "desc01": "The basic setting is 16 px, and the size ratio can be maintained even if the page is enlarged by rem."
    },
    "contrast": {
      "desc01": "All colors are set to have a contrast ratio of at least 4.5:1 with the background, but they are not pure black and white, but instead are balanced with fewer shades of gray.",
      "desc02": "It is specified using the following custom properties (CSS Variables) for common use:",
      "desc03": "It also supports dark mode (Gentle dark tones of the eyes), depending on the OS settings."
    },
    "maxWidth": {
      "desc01": "The maximum width of the main content is set to 80ch. ch is called a chain and is a variable unit depending on the size of the character.",
      "desc02": "The advantage of this setting is that it can support users with dyslexia who cannot read long sentences, and it is less likely that some text will become unreadable as the character size increases."
    },
    "verticalRhythm": {
      "desc01": "We use vertical rhythm that emphasizes consistency throughout the page. The margins and margins are set relative to the line spacing of 24px.",
      "desc02": "Cognitively impaired users can read text more easily if the words are evenly spaced."
    }
  },
  "vueA11yPage": {
    "title": "About accessibility with Vue.js",
    "description": "This post is from day 21 of the Web Accessibility Advent Calendar 2019. This article is about web accessibility support in Vue.js development.",
    "moveUrlText": "This page has been moved to {moveUrl}."
  },
  "vueA11yPage2019": {
    "title": "About accessibility with Vue.js 2019",
    "description": "This post is from day 21 of the Web Accessibility Advent Calendar 2019. This article is about web accessibility support in Vue.js development.",
    "heading": {
      "bio": "Profile",
      "book": "Books",
      "webA11y": "What is accessibility?",
      "vueA11y": "Vue.js & Web accessibility",
      "a11yNote": "Points to note about the implementation in Vue.js",
      "conclusion": "Conclusion"
    },
    "subHeading": {
      "book": "Web accessibility for beginners",
      "webA11y": {
        "1": "Definition of accessibility",
        "2": "Does accessibility support mean accommodating people with disabilities?",
        "3": "Addressing accessibility for everyone to participate"
      },
      "vueA11y": "There is no documentation of accessibility",
      "a11yNote": {
        "1": "Don't implement anything in {div}",
        "2": "Make it possible to operate with a keyboard",
        "3": "Development of SPA",
        "4": "Configuring Nuxt.js",
        "5": "Test & Check",
        "test": {
          "1": "vue-axe",
          "2": "Storybook",
          "3": "eslint-plugin-vuejs-accessibility",
          "4": "User test"
        }
      },
      "conclusion": "Leverage the web and work on accessibility through Vue.js",
      "info": "Information about this document"
    },
    "titleSection": {
      "desc01": "This article is Day 21 of the {link01}.",
      "desc02": "This is about web accessibility support in Vue.js development.",
      "link01": "Web Accessibility Advent Calendar 2019"
    },
    "bio": {
      "desc01": "My name is Okuto Oyama. On the Internet, I am active under the names of Oyama Michinoku and yamanoku.",
      "desc02": "I started out as a web designer for a web production company and worked as a markup/front-end engineer at GEEK Inc. before joining CrowdWorks Inc. in October 2019.",
      "desc03": "My role is as a UX engineer. Individuals are also involved in accessibility advocate.",
      "photoAlt": "Okuto Oyama"
    },
    "book": {
      "desc01": "I published a technical coterie magazine called “Web Accessibility for Beginners” at a 技術書典 (technical book festival), which I wanted to introduce as an introduction to web accessibility for those who are new to it.",
      "desc02": "It is now selling in PDF file at BOOTH and Note.",
      "desc03": "We also accept corrections, improvements, and suggestions in our feedback repository, Issue, on GitHub."
    },
    "webA11y": {
      "desc01": "First, Accessibility is defined as “admitting approach/receptiveness”; web accessibility refers to making information and content on the web accessible to all people.",
      "desc02": "Making it accessible to all people means making it easy to browse for people who are unfamiliar with the device, avoiding difficult phrases and making it easy to understand, adjusting the contrast to make it easier to browse, and taking into account the use of assistive technologies such as screen readers that can read aloud.",
      "quote01": "There are over one billion people with disabilities or about 15-20% of the population. The UN Convention on the Rights of Persons with Disabilities defines that access to information, including the Web, as a human right. Most countries around the world have ratified this UN convention, and several have adopted binding policies too. Yet regardless of any laws and regulations, implementing the accessibility standards is essential for people with disabilities, and useful for all.",
      "link01": {
        "text": "Video Introduction to Web Accessibility and W3C Standards | Web Accessibility Initiative (WAI) | W3C",
        "link": "https://www.w3.org/WAI/videos/standards-and-benefits/"
      },
      "desc03": "It's a common misconception that being accessible is perceived as being disabled-friendly.",
      "desc04": "Indeed, accessibility support is also intended to enable people with disabilities to use it, but the real purpose is to “make available to everyone” so I think that the only thing that stands out is how to deal with disabled people, which leads to misunderstanding.",
      "desc05": "Google I/O now has a live captioning feature for real-time captioning in voice recognition. Whether it's for the hearing impaired, watching videos on mute, or transcribing sentences to help you understand what's going on, we've created something that anyone can use in any situation.",
      "imgAlt01": "Introductory thumbnail of Live Caption feature",
      "link02": {
        "text": "Live transcription and captioning in Android are a boon to the hearing-impaired",
        "link": "https://techcrunch.com/2019/05/07/live-transcription-and-captioning-in-android-are-a-boon-to-the-hearing-impaired/"
      },
      "desc06": "Screen readers are not only for the visually impaired, but also to help people who have difficulty reading long sentences, such as dyslexia, and to make it easier to notice mistakes by having them read aloud rather than just visually checking sentences.",
      "desc07": "Accessibility is often confused with “usability”, which emphasizes ease of use, but its purpose is to consider whether or not it can be used before it is easy to use. And being able to use it also means being able to participate.",
      "desc08": "Other countries have laws to ensure accessibility, but this is because they consider accessibility itself to be a human right rather than a means to do so."
    },
    "vueA11y": {
      "desc01": "Now that you know something about accessibility, I'd like to talk about the main topic of Vue.js and web accessibility.",
      "desc02": "I believe that one of the factors that made Vue.js so popular in Japan was the fact that the official documentation was translated into Japanese. For me, the Japanese translation of the documents made it very easy to work on them.",
      "desc03": "By the way, do you know how much accessibility is mentioned in the official Vue.js documentation?",
      "desc04": "In fact, no documentation mentions accessibility, only a slight mention of it in some of the documentation.",
      "desc05": "React and Angular has an accessibility section in their official documentation that summarizes points to keep in mind when developing them.",
      "listitem01": {
        "text": "Accessibility – React",
        "link": "https://reactjs.org/docs/accessibility.html"
      },
      "desc06": "I feel it's okay to have an accessibility item, as well as React and Angular. When I looked into the Vue.js Issue, Callum Macra seems to have been working on the document, but the Pull Request has not made any progress.",
      "desc07": "It's still a work in progress, but the document, which is currently being edited, is very well put together for understanding web accessibility. I hope you'll take a look at it.",
      "desc08": "Accessibility article in the official documentation have yet to be created, but instead an accessibility community for Vue.js has been created.",
      "imgAlt01": "Screenshot of the Vue a11y site",
      "desc09": "The community worked on some accessibility libraries for Vue.js, and I'm hoping to contribute in some way."
    },
    "a11yNote": {
      "desc01": "Next, we'll discuss what you should keep in mind when implementing Vue.js when considering web accessibility.",
      "desc02": "The basic idea is to {strong01} to create web accessibility. This isn't that the {div} tag (or the {span} tag) is bad in and of itself, it's that you should use tags as needed outside of the look of that component.",
      "strong01": "try to implement semantics",
      "quote01": "For all user interface components (including but not limited to: form elements, links, and components generated by scripts), the name and role can be programmatically determined; states, properties, and values that can be set by the user can be programmatically set;",
      "quote02": {
        "text": "Understanding Success Criterion 4.1.2  | Understanding WCAG 2.0",
        "link": "https://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html"
      },
      "desc03": "For example, if you implement a button from the {div} tag, you need to consider a lot of things.",
      "desc04": "If you semantically implement this, you only need one {button} tag. The lack of semantics can diminish the inherent functionality of the system.",
      "desc05": "People who use screen readers use the keyboard to access information. So you need to be aware that you can access all the information on the keyboard.",
      "desc06": "Even if you don't use a screen reader, if you are used to using a computer, you may press the Enter key when submitting a form, press the ESC key when closing a dialog, or use the keyboard instead of the mouse.",
      "desc07": "Along with the consideration of keyboard operations, you should also be aware of the outlines for focus. This is because removing the outline would make it difficult to grasp the current position.",
      "desc08": "In modern front-end development, we're seeing more and more implementations of SPA ({abbr01}), which treats itself as dynamic content using a single HTML and JavaScript, so it's sometimes impossible to tell what and how things have changed in the page.",
      "abbr01": "Single Page Application",
      "desc09": "Page changes and status updates require an implementation using the {ariaLive} attribute. However, since you need to understand how to handle attribute values, you may want to consume the {vueAnnouncer} library to start with, which allows you to easily set up the reading of page moves in a router or state changes in a component.",
      "desc10": "It may be a blind spot, but the language setting is required for {htmlAttrs} in {nuxtConfigJs}.",
      "desc11": "If nothing is set, the language specification is {en}, i.e. English. If this is the case, even if the appearance of the application or site is Japanese, it will be an “English” application or the site in the browser's judgment.",
      "desc12": "If not set, some screen readers will not read the non-English parts. {small01}. Even if you're not internationalized, you have to be careful about your language settings.",
      "small01": "(This was confirmed with Android's Talkback feature)",
      "desc13": "There is a library called {axeCore} developed by a company called deque systems that does accessibility checks. This is what is also used in Chrome's {LightHouse} accessibility item check.",
      "imgAlt01": "An image of vue-axe in action, with an alert result appearing on the console of Chrome.",
      "desc14": "This can be embedded to allow accessibility checks to be run on the console. The following are the settings.",
      "desc15": "Some of you may be using it in your own component library or design system. It can't be checked by itself, but there is an add-on {storybookAddonA11y} that allows you to pass accessibility checks on components and stories.",
      "imgAlt02": "Screen shot of storybook-addon-a11y",
      "desc16": "You can also embed it in CI/CD to find errors at build time. eslint is used as a static validation tool for JavaScript, and some plugins can check accessibility.",
      "desc17": "Examples of checks include whether the {alt} attribute of {img} has a value, whether the form element has a label ({label}), and whether the emoji can be implemented in an accessible way.",
      "desc18": "However, Lint checks the code conventions, so don't rely only on error detection.",
      "desc19": "We've talked about mechanical testing, but studies have shown that automated checks and tests can only confirm 30% of all accessibility issues.",
      "desc20": "Therefore, it also needs to be checked through user tests. We'll be doing some hands-on look and feel, such as browser checks, screen reader tests, and keyboard tests to make sure things are okay.",
      "desc21": "The WCAG ({abbr02}) can be used as a reference to determine what kind of testing should be done. These are the guidelines for making web content accessible, published as W3C recommendations, and provide a technology-independent way to verify how to make it accessible.。",
      "desc22": "However, it is also difficult to refer to the WCAG specification every time, so it would be good to be able to create your own guidelines after referring to the necessary elements."
    },
    "conclusion": {
      "desc01": "On March 12, 1989, Tim Berners-Lee of the European Organization for Nuclear Research (CERN) wrote “Information Management: A Proposal” to describe a more advanced information management system. This led to the invention of the WWW (World Wide Web).",
      "imgAlt01": "Photo by Tim Berners-Lee",
      "desc02": "Tim Berners-Lee writes, “The power of the Web is in its universality. Access by everyone regardless of disability is an essential aspect.” he preached.",
      "desc03": "And “Whatever the device you use for getting your information out, it should be the same information.” He also answered in an interview. This is exactly how the Web is the solution to accessibility.",
      "desc04": "As proof, if you're reading this article, you can access this information anywhere, anytime if you can use the Internet. You may want to realize that you can do accessible things just by working with the Web.",
      "desc05": "And now, 30 years later, {link01}",
      "link01": "the number of Internet users in the world's population has crossed the 50% halfway mark!",
      "desc06": "As this number grows, the disparity of inaccessibility to the Internet will become greater and greater.",
      "quote01": "The fight for the web is one of the most important causes of our time. Today, half of the world is online. It is more urgent than ever to ensure the other half are not left behind offline, and that everyone contributes to a web that drives equality, opportunity, and creativity.",
      "quote02": "(Omission)",
      "quote03": "The web is for everyone and collectively we hold the power to change it. It won’t be easy. But if we dream a little and work a lot, we can get the web we want.",
      "quote04": {
        "text": "30 years on, what’s next #ForTheWeb?",
        "link": "https://webfoundation.org/2019/03/web-birthday-30/"
      },
      "desc07": "It's not that you can't come up with something accessible without a specific framework. However, I feel that Vue.js is a friendly and open-door JavaScript framework.",
      "desc08": "Making things accessible is not a matter of “done for,” or “0 or 100,” but rather a matter of continuous review and trial-and-error while creating a product, so We hope to proceed slowly and steadily.",
      "desc09": "Through this article, we hope that developers, designers, and others involved with Vue.js will become more interested in accessibility and empowered to work on accessibility in the future.",
      "desc10": "We still have a lot of work to do, and it's a difficult field to advance, but I hope that this circle will expand little by little. Because “Accessibility” is acceptable to any person."
    },
    "feedback": {
      "github": {
        "linkTitle": "Request for correction of the article “About accessibility with Vue.js”"
      }
    }
  },
  "archivePage": {
    "title": "Archive",
    "desc01": "This page is a writing collection of past articles and logs of Okuto Oyama called yamanoku.",
    "desc02": "We fixed the broken links during the document migration, but the content itself has not been updated, so please be careful when you refer to it.",
    "slug": {
      "feedback": "As this is an archived article, we do not accept requests for content updates, but please contact us if you find any typographical errors or omissions."
    },
    "backText": "Back to Archive List",
    "feedback": {
      "github": {
        "linkTitle": "Request for correction of archive document"
      }
    }
  },
  "privacyPage": {
    "title": "Privacy Policy",
    "description": "yamanoku.net privacy policy page. Provides information about access analysis tools.",
    "analytics": {
      "heading": "About Access Analysis Tools",
      "desc01": "yamanoku.net uses Google's access analysis tool “Google Analytics”.",
      "desc02": "This Google Analytics server uses cookies to collect access information. This access information is collected anonymously and is not personally identifiable.",
      "desc03": "Google Analytics cookies on this site will be retained for 26 months. This feature can be rejected by disabling cookies, so please check your browser settings.",
      "link01": {
        "title": "Google Analytics Terms of Service",
        "url": "https://www.google.com/analytics/terms/us.html"
      },
      "link02": {
        "title": "How Google uses information from sites or apps that use our services",
        "url": "https://policies.google.com/technologies/partner-sites?hl=en"
      }
    }
  },
  "heading": {
    "basic": "Basic Info",
    "job": "Job Info",
    "career": "Career Info",
    "productList": "Product List",
    "todoList": "TODO List",
    "techStack": "Technology Stack",
    "relatedList": "Related Links List",
    "presentations": {
      "title": "Presentations",
      "stage": "Stage",
      "write": "Writing"
    },
    "sns": "Social Service",
    "donate": "Donate & Sponsor",
    "contact": "Contact"
  },
  "error": {
    "500": {
      "text01": "A server error has occurred. Please wait for a while and try again.",
      "text02": "If it is still not recovered, please contact us via the email address."
    }
  },
  "prefixAlt": {
    "photo": "Photo: ",
    "thumbnail": "Thumbnail: ",
    "screenshot": "ScreenShot: "
  },
  "multilingual": "Multilingual Page",
  "details": {
    "summary": "Details",
    "summary_feedback": "Correction requests for articles"
  },
  "feedback": {
    "github": {
      "link": "Issue details: ",
      "title": "Creating a GitHub Issue"
    },
    "twitter": {
      "title": "Tweet for author"
    }
  },
  "backTop": "Return to the top page",
  "alertOneYearText": "This article has been published for more than a year. Some parts of the content are outdated.",
  "onlyJPText": "Sorry, Japanese text only"
}
